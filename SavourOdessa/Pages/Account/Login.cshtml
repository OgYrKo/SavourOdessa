@page
@model LoginModel
<style>
    .grid-container {
        display: grid;
        grid-template-columns: 1fr 1fr; /* Two columns of equal width */
        align-items: center;
        gap: 16px; /* Gap between grid items */
    }

    /* Optional styling for the grid items */
</style>
<div>
    <div class="grid-container">
        <div>
            <img src="~/images/Shared/login.png" alt="Savour Odessa">
        </div>
        <div>
            <div class="d-flex align-items-center justify-content-center" style="min-height: 80vh;  ">
                <div style="display:inline;width: 600px; max-width: 500px; min-width: 100px;">
                    <h2 style="text-align: center;">
                        Log In
                    </h2>
                    <div class="m-1 text-danger" asp-validation-summary="ModelOnly"></div>
                    <form method="post">
                        <input type="hidden" name="returnUrl" value="@Model.ReturnUrl" />
                        <div class="form-group">
                            <label>UserName</label>
                            <input class="form-control" asp-for="UserName" />
                            <span asp-validation-for="UserName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label>Password</label>
                            <input asp-for="Password" type="password" class="form-control" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <button class="btn btn-primary mt-2 form-control" type="submit" style="background-color:#EECE5A;border-width:inherit;">Log In</button>
                    </form>
                    <hr />
                    <div class="text-center">
                        <p style="text-align: center;">I’m new here</p>
                        <a href="/Account/Register">
                            <button class="btn btn-primary mt-2 form-control" style="background-color:#EECE5A;border-width:inherit;">Register</button>
                        </a>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


@functions {
    [CustomAuthorize("Guest")]
    public class LoginModel : PageModel
    {
        private readonly IConfiguration _configuration;
        private readonly IDataContextFactory _contextFactory;
        public LoginModel(IConfiguration configuration, IDataContextFactory contextFactory)
        {
            _configuration = configuration;
            _contextFactory = contextFactory;
        }
        [BindProperty]
        public string UserName { get; set; } = string.Empty;
        [BindProperty]
        public string Password { get; set; } = string.Empty;
        [BindProperty(SupportsGet = true)]
        public string? ReturnUrl { get; set; }
        public async Task<IActionResult> OnPostAsync()
        {
            if (ModelState.IsValid)
            {
                try
                {
                    var context = _contextFactory.CreateDbContext(UserName, Password);
                    var response = context.Users.Where(value => value.Username == UserName).Select(value => DataContext.get_group_name(value.Username)).ToList();
                    string role = response[0];
                    if (role != "guest")
                    {
                        HttpContext httpContext = Request.HttpContext;
                        httpContext.Session.SetString("Username", UserName);
                        httpContext.Session.SetString("Password", Password);
                        httpContext.Session.SetString("Role", role);
                        await httpContext.Session.CommitAsync();

                        return Redirect(ReturnUrl ?? "/");
                    }
                    ModelState.AddModelError("", "You are logged in as a guest");

                }
                catch
                {
                    ModelState.AddModelError("", "Invalid username or password");
                }
            }
            return Page();
        }

    }
}